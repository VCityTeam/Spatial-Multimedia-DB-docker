os: linux
dist: focal
language: generic

addons:
  hosts:
    # Configure the "postgres" hostname in /etc/hosts and resolve it to
    # 127.0.0.1
    - postgres
  apt:
    packages:
    - telnet
    
    
services:
  - docker
  # Note that it is NOT necessary to require the postgresql service
  # with a line of the form
  #   - postgresql
  # as explained by this post
  # https://stackoverflow.com/questions/61734368/postgresql-12-on-travis-ci-taking-5-minutes-to-startup#62037133

before_install:
  - |
    # Install a more recent version of DockerCompose than the default one
    export  DOCKER_COMPOSE_VERSION=1.29.2
    sudo rm /usr/local/bin/docker-compose
    curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
    chmod +x docker-compose
    sudo mv docker-compose /usr/local/bin

jobs:
  include:
    - stage: Building and running Spatial-Multimedia-DB container
      script:
        # The postgres container is configured to listen all addresses as
        # can be checked by # running the command
        #    docker run -i --rm postgres:9.6 cat /usr/share/postgresql/postgresql.conf.sample | grep listen_addresses
        # that returns
        #    listen_addresses = '*'
        # Refer to the "Database Configuration" of the docker documentation as
        # found at
        #    https://hub.docker.com/_/postgres
        #
        # We want the container to be configured with the "conninfo" (psql
        # terminology for connection info) that Spatial-Multimedia-DB will
        # use. We thus plugin the default values used by Spatial-Multimedia-DB
        # that is its `.env` file values, refer to
        # https://github.com/VCityTeam/Spatial-Multimedia-DB/blob/master/.env
        - docker run --rm --detach -p 5432:5432 --user postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=extendeddoc -e POSTGRES_PASSWORD=password postgres:9.6
        - sleep 100
        - telnet postgres 5432
        # Check that the default database can indeed be reached (using the
        # "conninfo" string to designate the database):
        - psql "host=postgres port=5432 dbname=extendeddoc user=postgres password=password" -c '\l'
        - docker build -t vcity:Spatial-Multimedia-DB Spatial-Multimedia-DB-context
        - docker run --rm --detach -t vcity:Spatial-Multimedia-DB
        - docker ps -a -q --filter ancestor=vcity:Spatial-Multimedia-DB --format="{{.ID}}"
        - docker logs -f  $(docker ps -a -q --filter ancestor=vcity:Spatial-Multimedia-DB --format="{{.ID}}")
        # - sleep 100
        - docker ps -a -q --filter ancestor=vcity:Spatial-Multimedia-DB --format="{{.ID}}"
        - docker stop $(docker ps -a -q --filter ancestor=vcity:Spatial-Multimedia-DB --format="{{.ID}}")
    - stage: Building and running docker-compose
      script:
        - |
          cd Example
          docker-compose build
          docker-compose up -d
          sleep 100
          docker-compose down
    - stage: "Markdown link checks"
      language: node_js
      node_js: 12
      script:
        - npm install --global remark-cli remark-validate-links
        - remark -u validate-links .
        - |
          export FAILURE_THRESHOLD=0
          export warnings=`remark -u validate-links . 2>&1 | grep warning | grep "Link to unknown" | wc -l`
          if [ $warnings -gt $FAILURE_THRESHOLD ]; then
            exit 1;
          fi

